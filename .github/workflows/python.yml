name: Python package

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version:
          - '3.13'
          - '3.12'
          - '3.11'
          - '3.10'
          - '3.9'
          - '3.8'
          - 'pypy3.10'
          - 'pypy3.9'
        exclude:
          - os: windows-latest
            python-version: 'pypy3.10'
          - os: windows-latest
            python-version: 'pypy3.9'
          - os: windows-latest
            python-version: 'pypy3.8'
          - os: macos-latest
            python-version: 'pypy3.10'
          - os: macos-latest
            python-version: 'pypy3.9'
          - os: macos-latest
            python-version: 'pypy3.8'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/Library/Caches/pip
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{matrix.python-version}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.python-version}}-pip-

      - name: Install Rust (for PyPy)
        if: ${{ startsWith(matrix.python-version, 'pypy') && runner.os == 'Linux' }}
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          . "$HOME/.cargo/env"

      - name: Install dependencies (CPython)
        if: ${{ !startsWith(matrix.python-version, 'pypy') }}
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Install dependencies (PyPy)
        if: ${{ startsWith(matrix.python-version, 'pypy') && runner.os == 'Linux' }}
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Test with pytest
        run: |
          poetry run py.test --cov-append
        env:
          COV_CORE_SOURCE: src 
          COV_CORE_CONFIG: .coveragerc 
          COV_CORE_DATAFILE: .coverage.eager
