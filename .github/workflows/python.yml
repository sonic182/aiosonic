
name: Python package

on:
  push:
  pull_request:

jobs:
  build:


    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version:
          - '3.12'
          - '3.11'
          - '3.10'
          - '3.9'
          - '3.8'
          - '3.7'
          - 'pypy3.10'
          - 'pypy3.9'
          - 'pypy3.8'
          - 'pypy3.7'
        exclude:
          - os: windows-latest
            python-version: 'pypy3.10'
          - os: windows-latest
            python-version: 'pypy3.9'
          - os: windows-latest
            python-version: 'pypy3.8'
          - os: windows-latest
            python-version: 'pypy3.7'

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[test]"
      #   if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          ./tests.sh --cov-append
        env:
          COV_CORE_SOURCE: src 
          COV_CORE_CONFIG: .coveragerc 
          COV_CORE_DATAFILE: .coverage.eager 

      - name: Coveralls
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            coveralls --service=github
