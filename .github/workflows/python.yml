
name: Python package

on:
  push:
  pull_request:

jobs:
  build:


    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version:
          - '3.12'
          - '3.11'
          - '3.10'
          - '3.9'
          - '3.8'
          - 'pypy3.10'
          - 'pypy3.9'
          - 'pypy3.8'
        exclude:
          - os: windows-latest
            python-version: 'pypy3.10'
          - os: windows-latest
            python-version: 'pypy3.9'
          - os: windows-latest
            python-version: 'pypy3.8'
          - os: windows-latest
            python-version: 'pypy3.7'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{matrix.python-version}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.python-version}}-pip-
      
      - uses: actions/cache@v3
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-${{matrix.python-version}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.python-version}}-pip-
      
      - uses: actions/cache@v3
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{matrix.python-version}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.python-version}}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      
      - name: Test with pytest
        run: |
          poetry run py.test --cov-append
        env:
          COV_CORE_SOURCE: src 
          COV_CORE_CONFIG: .coveragerc 
          COV_CORE_DATAFILE: .coverage.eager 
