trigger:
- master

strategy:
  matrix:
    Python36-ubuntu:
      python.version: '3.6'
      imageName: 'ubuntu-latest'

    Python37-ubuntu:
      python.version: '3.7'
      imageName: 'ubuntu-latest'

    Python38-ubuntu:
      python.version: '3.8'
      imageName: 'ubuntu-latest'

    Python36-macos:
      python.version: '3.6'
      imageName: 'macOS-latest'

    Python37-maOS:
      python.version: '3.7'
      imageName: 'macOS-latest'

    Python38-maOS:
      python.version: '3.8'
      imageName: 'macOS-latest'

    Python36-windows:
      python.version: '3.6'
      imageName: 'windows-latest'

    Python37-windows:
      python.version: '3.7'
      imageName: 'windows-latest'

    Python38-windows:
      python.version: '3.8'
      imageName: 'windows-latest'



pool:
  vmImage: $(imageName)

steps:
  - task: NodeTool@0 
    displayName: 'Use Node version 12.x'
    inputs:
      versionSpec: '12.x'

  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      pip install --upgrade pip setuptools wheel
      pip install -r requirements.txt
      pip install -e ".[test]"
      pytest --cov=aiosonic --doctest-modules --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html
    timeoutInMinutes: 5
    displayName: 'Run tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results in $(imageName) for Python $(python.version)'
